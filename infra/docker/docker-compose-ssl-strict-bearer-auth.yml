# docker-compose for kafka broker with ssl enabled, strict ssl check and oauth-bearer authentication

### Make sure to set the following variable in .env or as environment variable
#KAFKA_HOST_NAME=kafka.broker.dev.local
#KAFKA_TRUSTSTORE_PWD=your-truststore-password
#KAFKA_KEYSTORE_PWD=your-keystore-password
#DP_JWKS_ENDPOINT_URL=your-idp-jwks-endpoint
#IDP_JWT_EXPECTED_AUDIENCE=use the 'aud' value in jwt token
#IDP_JWT_EXPECTED_ISSUER=use the 'iss' value in jwt token

## Example client configuration(eg: client-ssl-strict.properties) to connect to kafka broker.
#security.protocol=SASL_SSL
#ssl.truststore.location=/path-to/client.truststore.p12
#ssl.truststore.password=your-truststore-pwd
#ssl.truststore.type=PKCS12
#sasl.mechanism=OAUTHBEARER
#sasl.oauthbearer.token.endpoint.url=http://keycloak.local.dev:8666/realms/<your-realm>/protocol/openid-connect/token
#sasl.login.callback.handler.class=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginCallbackHandler
#sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
#  clientId="your-client-id" \
#  clientSecret="your-client-secret" \
#  scope="openid";

version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9093:9093
      - 5005:5005
    dns:
      - 192.168.0.21 # optional
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://${KAFKA_HOST_NAME}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:SASL_SSL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      ### SSL config ###
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/broker.truststore.p12
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_TRUSTSTORE_PWD}
      KAFKA_SSL_TRUSTSTORE_TYPE: PKCS12
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/broker.keystore.p12
      KAFKA_SSL_KEYSTORE_PASSWORD: ${KAFKA_KEYSTORE_PWD}
      KAFKA_SSL_KEYSTORE_TYPE: PKCS12
      KAFKA_SSL_KEY_PASSWORD: ${KAFKA_KEYSTORE_PWD}
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      ### SASL config ###
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN, OAUTHBEARER
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallbackHandler
      KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"
      KAFKA_SASL_OAUTHBEARER_JWKS_ENDPOINT_URL: ${IDP_JWKS_ENDPOINT_URL}
      KAFKA_SASL_OAUTHBEARER_SCOPE_CLAIM: scope
      KAFKA_SASL_OAUTHBEARER_EXPECTED_AUDIENCE: ${IDP_JWT_EXPECTED_AUDIENCE}
      KAFKA_SASL_OAUTHBEARER_EXPECTED_ISSUER: ${IDP_JWT_EXPECTED_ISSUER}
      ### Debug config ###
#      KAFKA_LOG4J_LOGGERS: "org.apache.kafka.common.security=DEBUG,org.apache.kafka.common.network.SaslChannelBuilder=DEBUG"
#      KAFKA_OPTS:
#        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
#        -Djavax.net.debug=ssl:handshake

    volumes:
      - ./docker_volume/kafka/ssl_secrets:/etc/kafka/secrets:ro  # Ensure this points to the directory with your keystore and truststore

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: PLAINTEXT